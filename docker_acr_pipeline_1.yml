trigger: none

pool:
  name: "linuxpool"
  demands:
    - Agent.Name -equals linuxagent

stages:
- stage: Build_and_Push
  jobs:

  - job: CopyFiles
    displayName: "Copy Files From Default Location"
    steps:
    - task: CopyFiles@2
      inputs:
        SourceFolder: "/home/dockeruser/_work/1/s/"
        Contents: '**' 
        TargetFolder: "/home/dockeruser/dotnet_code"

  - job: BuildDockerfile
    displayName: "Build Dockerfile"
    steps:
    - task: DockerCompose@1
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'devops-azure-connection'
        azureContainerRegistry: '{"loginServer":"prkappreg.azurecr.io", "id" : "/subscriptions/315346d8-947a-4fa6-85ba-e2a58ea2f051/resourceGroups/rg-acr/providers/Microsoft.ContainerRegistry/registries/prkapp"}'
        dockerComposeFile: '/home/dockeruser/dotnet_code/docker-compose.yml'
        projectName: "prkapp"
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'build'

  - job: PushDockerImage
    displayName: "Push Docker Image to ACR"
    dependsOn: BuildDockerfile
    steps:
    - task: DockerCompose@1
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'devops-azure-connection'
        azureContainerRegistry: '{"loginServer":"prkappreg.azurecr.io", "id" : "/subscriptions/315346d8-947a-4fa6-85ba-e2a58ea2f051/resourceGroups/rg-acr/providers/Microsoft.ContainerRegistry/registries/prkapp"}'
        dockerComposeFile: '/home/dockeruser/dotnet_code/docker-compose.yml'
        projectName: 'prkapp'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'push'

- stage: Run_Containers
  jobs:

  - job: Run_Dev_Container
    displayName: "Run Dev Container"
    steps:
    - task: SSH@0
      inputs:
        sshEndpoint: 'dev-docker-connection'
        runOptions: 'inline'
        inline: |
          docker run -d -p 8080:80 --name dev_app_container prkappreg.azurecr.io/sampleapp:v1.0
        readyTimeout: '20000'

  - job: Run_Test_Container
    displayName: "Run Test Container"
    steps:
    - task: SSH@0
      inputs:
        sshEndpoint: 'test-docker-connection'
        runOptions: 'inline'
        inline: |
          docker run -d -p 8080:80 --name dev_app_container prkappreg.azurecr.io/sampleapp:v1.0
        readyTimeout: '20000'